trigger:
  batch: true
  tags:
    include:
    - '*'
  branches:
    include:
    - main

pr:
  branches:
    include:
    - '*'
  paths:
    include:
    - '*'

stages:
  - stage: Publish
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
    dependsOn: []
    jobs:
      - job: Build
        pool:
          vmImage: ubuntu-latest
        timeoutInMinutes: 10
        variables:
          - name: version
            value: $[ replace(variables['Build.SourceBranch'], 'refs/tags/', '') ] 
        steps:
        - task: UseDotNet@2
          inputs:
            version: '8.x'
            includePreviewVersions: true
        - script: npm install
          displayName: 'Restore Node.js modules'
        - script: dotnet tool restore
          displayName: 'Restore .NET tools'
        - script: npm install -g webpack-cli
          displayName: 'Install Webpack'
        - script: npm install -g vsce
          displayName: 'Install VSCode builder'
        - script: dotnet cake --target=vsix --release-version=$(version) --configuration=release
          displayName: 'Build VSIX'
        - publish: '$(System.DefaultWorkingDirectory)/artifacts'
          displayName: 'Publish Artifacts'
          artifact: artifacts
        - task: GitHubRelease@1
          inputs:
            gitHubConnection: 'upstream'
            repositoryName: '$(Build.Repository.Name)'
            action: 'create'
            tagSource: 'gitTag'
            assets: 'artifacts/DotNet*'



  - stage: Tests
    condition: not(startsWith(variables['Build.SourceBranch'], 'refs/tags'))
    dependsOn: []
    jobs:
#//////////////////////////////////////////////////////////////////////
#// MacOS Tests
#//////////////////////////////////////////////////////////////////////
      - job: MacOS
        pool:
          vmImage: macos-latest
        timeoutInMinutes: 10
        steps:
        - task: UseDotNet@2
          inputs:
            version: '6.x'
        - task: UseDotNet@2
          inputs:
            version: '7.x'
        - task: UseDotNet@2
          inputs:
            version: '8.x'
            includePreviewVersions: true
        - script: dotnet tool restore
          displayName: 'Restore .NET tools'
        - script: dotnet cake --target=test --configuration=release
          displayName: 'Run tests'
          continueOnError: true
        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'VSTest'
            testResultsFiles: 'artifacts/*.trx'
            failTaskOnFailedTests: true
#//////////////////////////////////////////////////////////////////////
#// Linux Tests
#//////////////////////////////////////////////////////////////////////
      - job: Linux
        pool:
          vmImage: ubuntu-latest
        timeoutInMinutes: 10
        steps:
        - task: UseDotNet@2
          inputs:
            version: '6.x'
        - task: UseDotNet@2
          inputs:
            version: '7.x'
        - task: UseDotNet@2
          inputs:
            version: '8.x'
            includePreviewVersions: true
        - script: dotnet tool restore
          displayName: 'Restore .NET tools'
        - script: dotnet cake --target=test --configuration=release
          displayName: 'Run tests'
          continueOnError: true
        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'VSTest'
            testResultsFiles: 'artifacts/*.trx'
            failTaskOnFailedTests: true
#//////////////////////////////////////////////////////////////////////
#// Windows Tests
#//////////////////////////////////////////////////////////////////////
      - job: Windows
        pool:
          vmImage: windows-latest
        timeoutInMinutes: 10
        steps:
        - task: UseDotNet@2
          inputs:
            version: '6.x'
        - task: UseDotNet@2
          inputs:
            version: '7.x'
        - task: UseDotNet@2
          inputs:
            version: '8.x'
            includePreviewVersions: true
        - script: dotnet tool restore
          displayName: 'Restore .NET tools'
        - script: dotnet cake --target=test --configuration=release
          displayName: 'Run tests'
          continueOnError: true
        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'VSTest'
            testResultsFiles: 'artifacts/*.trx'
            failTaskOnFailedTests: true
